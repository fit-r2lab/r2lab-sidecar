[project]
name = "r2lab-sidecar"
version = "0.10.0"
description = "Testbed Management Companion for R2Lab"
license = "CC-BY-NC-4.0"
readme = "README.md"
authors = [
    {name = "Thierry Parmentelat", email = "thierry.parmentelat@inria.fr"},
]
keywords=['R2lab', 'networking', 'testbed', 'wireless']
requires-python = ">=3.10"
dependencies = [
    'websockets',
]


[project.scripts]
r2lab-sidecar = "r2lab_sidecar.__main__:main"

# ideally we could package
# - systemd/r2lab-sidecar.service as a systemd service file in /usr/lib/systemd/system
# - and possibly web/sidecar-client* as data files in the package
#
# however as of 2024 dec 4, there seems to be no easy to reproduce
# the equivalent of setuptools.data_files and setuptools.package_data
# while using hatch
# I am seeing rather odd behaviour with using
# [tool.hatch.build.targets.sdist] and [tool.hatch.build.targets.wheel]
# with an include clause

# this is too confusing for now, so I am leaving this commented out
#
# [tool.setuptools.package-data]
# r2lab_sidecar = [
#     "web/sidecar-client.*",
# ]

# [tool.setuptools]
# data-files = [
#     ['/usr/lib/systemd/system', ['systemd/r2lab-sidecar.service']]
# ]


# [project.optional-dependencies]
# mapdataframe = ["pandas"]
# tests = ["pytest"]


[project.urls]
Homepage = "https://github.com/r2lab.inria.fr"
# never got around to that
# Documentation = "https://r2lab-sidecar.readthedocs.io"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
